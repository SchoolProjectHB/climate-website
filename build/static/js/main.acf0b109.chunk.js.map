{"version":3,"sources":["logo.png","components/images/firstpage.gif","components/pages/statistic/statistic-images/fossilimage.png","components/pages/statistic/statistic-images/SiggeFossilaBranslen.png","components/pages/statistic/statistic-images/tempimage.png","components/pages/statistic/statistic-images/SiggeGlobalTemperatur.png","components/pages/statistic/statistic-images/glacierimage.png","components/pages/statistic/statistic-images/SiggeGlacier.png","components/pages/statistic/statistic-images/SiggeHavsnivaer.png","components/pages/statistic/statistic-images/seaimage.png","components/layouts/Navbar.js","components/layouts/Footer.js","components/layouts/Start.js","components/pages/statistic/MyBarChartFossil.jsx","components/pages/statistic/FossilFuels.jsx","components/pages/statistic/MyBarChartGlobal.jsx","components/pages/statistic/GlobalTemp.jsx","components/pages/statistic/MyBarChartGlacier.jsx","components/pages/statistic/Glacier.jsx","components/pages/statistic/MyBarChartSeaLevel.jsx","components/pages/statistic/SeaLevel.jsx","components/layouts/Klimatforandringar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo","class","alt","Footer","Date","getFullYear","Start","startsida","width","Component","MyBarChartFossil","fossilData","this","props","FossilEmission","undefined","Fragment","height","data","margin","top","right","left","bottom","dataKey","name","strokeDasharray","type","stroke","activeDot","r","FossilFules","state","indexYear","fetch","response","json","setState","fossilimage","siggefossil","onYearFilter","handleYearFilter","MyBarChartGlobal","globalTemp","globalTempEmission","GlobalTemp","sort","a","b","Year","tempimage","siggetemp","MyBarChartGlacier","dataGlacier","GlacierEmission","Glacier","glacierimage","MyBarChartSeaLevel","seaLevelData","SeaLevelEmission","SeaLevel","seaimage","Klimatforandringar","path","component","FossilFuel","App","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acf0b109.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43dd4d7d.png\";","module.exports = __webpack_public_path__ + \"static/media/firstpage.30703d26.gif\";","module.exports = __webpack_public_path__ + \"static/media/fossilimage.ca8d0efc.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeFossilaBranslen.3cb3e5a0.png\";","module.exports = __webpack_public_path__ + \"static/media/tempimage.75cdefc6.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeGlobalTemperatur.0c3b018a.png\";","module.exports = __webpack_public_path__ + \"static/media/glacierimage.f98d788a.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeGlacier.b68e6458.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeHavsnivaer.22536f91.png\";","module.exports = __webpack_public_path__ + \"static/media/seaimage.207270c2.png\";","import React from \"react\";\nimport logo from \"../../logo.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n  return (\n      <div className=\"divlogo\">\n        <Link to=\"/climate-website\">\n          <img src={logo} class=\"logo\" alt=\"logo\" />\n        </Link>\n      </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"main-footer\">\n      <div className=\"footer-middle\">\n        <div className=\"container\">\n          <div className=\"row\">\n            {/* Column 1 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3>Smartare utbildning</h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>\n                  Smartare Utbildning är ett företag med klimat i fokus. Vår\n                  mission är att bidra till ökad kunskap om miljön och\n                  miljöförändringar. Detta tror vi kan leda till en grönare, och\n                  mer hållbar framtid.\n                </li>\n              </ul>\n            </div>\n            {/* Column 2 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3>Om applikationen</h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>\n                  Applikationen är till för dig som går på Guldhedsskolan, i\n                  årskurs 6-9. Den är ett verktyg för att du ska lära dig mer om\n                  klimatförändringar, genom att ta del av information och\n                  jämföra klimatdata.\n                </li>\n              </ul>\n            </div>\n            {/* Column 3 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3> Kontakta oss </h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>Smartare Utbildning</li>\n                <li>Göteborg</li>\n                <li>+46700000000</li>\n                <li>kontakt@smartareutbildning.se</li>\n              </ul>\n            </div>\n          </div>\n          {/* Footer bottom */}\n          <div className=\"footer-bottom\">\n            <p className=\"text-xs-center text-white\">\n              &copy;{new Date().getFullYear()} Smartare utbildning - All Right\n              Reserved\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport startsida from \"../images/firstpage.gif\";\nimport { Link } from \"react-router-dom\";\n\nclass Start extends Component {\n  render() {\n    return (\n      <div class=\"containerStart\">\n        <img src={startsida} width=\"100%\" alt=\"peaceful town\" />\n        <Link to=\"/statistic/FossilFuels\">\n          <button className=\"button\">\n            Klicka här för att komma igång!\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nclass MyBarChartFossil extends Component {\n  render() {\n    let fossilData = this.props.FossilEmission;\n    if (fossilData === undefined) return <p>There is no data...! </p>;\n\n    return (\n      <React.Fragment>\n        <LineChart\n          width={1000}\n          height={500}\n          data={fossilData}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <XAxis dataKey=\"Year\" />\n          <YAxis name=\"co2\" />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Gas Fuel\"\n            name=\"Gasbränslen\"\n            stroke=\"#3f6962\"\n            activeDot={{ r: 4 }}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Liquid Fuel\"\n            name=\"Flytande bränslen\"\n            stroke=\"#849c4e\"\n            activeDot={{ r: 4 }}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Solid Fuel\"\n            name=\"Fasta bränslen\"\n            stroke=\"#e1903c\"\n            activeDot={{ r: 4 }}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Cement\"\n            name=\"Cement\"\n            stroke=\"#f7de34\"\n            activeDot={{ r: 4 }}\n          />\n        </LineChart>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyBarChartFossil;\n","import React, { Component } from \"react\";\nimport MyBarChart from \"./MyBarChartFossil\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport fossilimage from \"./statistic-images/fossilimage.png\";\nimport siggefossil from \"./statistic-images/SiggeFossilaBranslen.png\";\n\nclass FossilFules extends Component {\n  state = {\n    FossilEmission: [],\n    indexYear: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ FossilEmission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"box col-sm\">\n            <div>\n              <h4>Fossila utsläpp</h4>\n              <p>\n                Bensin, diesel, olja, naturgas och kol är exempel på fossila\n                bränslen. Dessa används bland annat till fordon, kol och\n                oljekraftverk. När fossila bränslen används släpper de ut gaser\n                som skadar luften.\n                <br></br>\n                <br></br>\n                Några fossila bränslen är svaveldioxid, kväveoxider och\n                koldioxid (CO2). Alla dessa bränslen bidrar till den globala\n                uppvärmningen.\n              </p>\n\n              <img\n                src={fossilimage}\n                class=\"fossilimage\"\n                alt=\"factory with smoke\"\n              ></img>\n            </div>\n          </div>\n\n          <div className=\"box col-sm\">\n            <h4>Vad är fossila bränslen?</h4>\n            <b>Gasbränsle:</b>\n            <p>\n              Gasbränslen är bränslen som är i gasform. Exempel på gasbränslen\n              är biogas, naturgas, gasol och vätgas.\n            </p>\n            <b>Flytande bränsle:</b>\n            <p>\n              {\" \"}\n              Flytande bränsle är en vätska som innehåller mycket energi.\n              Exempel på flytande bränslen är bensin, diesel och etanol.\n            </p>\n            <b>Fasta bränslen:</b>\n            <p>\n              {\" \"}\n              Fasta bränslen är olika former av fast material som kan brännas.\n              Detta kan till exempel vara trä, kol eller träpellets.\n            </p>\n            <b>Cement:</b>{\" \"}\n            <p>\n              {\" \"}\n              Cement används bland annat för att bygga byggnader.\n              Cementindustrin bidrar till stora utsläpp av koldioxid (CO2).\n            </p>\n          </div>\n\n          <div className=\"boxsigge col-sm\">\n            <img src={siggefossil} class=\"siggefossil\" alt=\"sigge info.\"></img>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"box-graph col-sm\">\n            <div className=\"App\">\n              <h1>Statistik över fossila utsläpp</h1>\n\n              <p className=\"descriptionCo2\">co2</p>\n\n              <MyBarChart\n                FossilEmission={this.state.FossilEmission}\n                onYearFilter={this.handleYearFilter}\n              ></MyBarChart>\n\n              <p className=\"descriptionYear\">År</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FossilFules;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nclass MyBarChartGlobal extends Component {\n  render() {\n    let globalTemp = this.props.globalTempEmission;\n    if (globalTemp === undefined) return <p>There is no data </p>;\n\n    return (\n      <React.Fragment>\n        <LineChart\n          width={1000}\n          height={600}\n          data={globalTemp}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <XAxis dataKey=\"Year\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Mean\"\n            name=\"Gensomsnittlig temperatur (C°)\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n        </LineChart>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyBarChartGlobal;\n","import React, { Component } from \"react\";\nimport MyBarChartGlobal from \"./MyBarChartGlobal\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport tempimage from \"./statistic-images/tempimage.png\";\nimport siggetemp from \"./statistic-images/SiggeGlobalTemperatur.png\";\n\nclass GlobalTemp extends Component {\n  state = {\n    globalTempEmission: [],\n    indexYear: 250\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/temp.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      globalTempEmission: data.sort((a, b) =>\n        a.Year > b.Year ? 1 : b.Year > a.Year ? -1 : 0\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"box col-sm\">\n            <div>\n              <h4>Globala temperaturer</h4>\n              <p>\n                Global uppvärmning är en ökning av jordens medeltemperatur, som\n                orsakas av den ökade utsläppen av växthusgaser. De senaste\n                hundra åren har temperaturen på jorden ökat snabbare än\n                någonsin.\n                <br></br>\n                <br></br>\n                Konsekvenserna av att den globala temperaturen ökar är\n                allvarliga. Bland annat är en risk att vissa djurarter, så som\n                isbjörnarna, utrotas. Detta beror på att glaciärerna de bor på\n                smälter bort.{\" \"}\n              </p>\n              <img\n                src={tempimage}\n                class=\"tempimage\"\n                alt=\"earth and thermometer\"\n              ></img>\n            </div>\n          </div>\n\n          <div className=\"box col-sm\">\n            <h4>Ordlista</h4>\n            <b>Växthusgas:</b>\n            <p>\n              En gas i atmosfären som fångar in värme. Exempel på växthusgaser\n              är koldioxid och metan.\n            </p>\n            <b>Medeltemperatur:</b>\n            <p>Medeltemperatur är den genomsnittliga temperaturen.</p>\n          </div>\n          <div className=\"boxsigge col-sm\">\n            <img src={siggetemp} class=\"siggefossil\" alt=\"sigge info.\"></img>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"box-graph col-sm\">\n            <div className=\"App\">\n              <h1>Statistik över den globala temperaturen</h1>\n              <p className=\"descriptionCo2\">C°</p>\n\n              <MyBarChartGlobal\n                globalTempEmission={this.state.globalTempEmission}\n                onYearFilter={this.handleYearFilter}\n              ></MyBarChartGlobal>\n              <p className=\"descriptionYear\">År</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GlobalTemp;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nclass MyBarChartGlacier extends Component {\n  render() {\n    let dataGlacier = this.props.GlacierEmission;\n    if (dataGlacier === undefined) return <p>There is no data </p>;\n\n    return (\n      <React.Fragment>\n        <LineChart\n          width={1000}\n          height={600}\n          data={dataGlacier}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <XAxis dataKey=\"Year\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"Mean cumulative mass balance\"\n            name=\"Glaciärens Massbalans\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n        </LineChart>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyBarChartGlacier;\n","import React, { Component } from \"react\";\nimport MyBarChartGlacier from \"./MyBarChartGlacier\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport glacierimage from \"./statistic-images/glacierimage.png\";\nimport siggefossil from \"./statistic-images/SiggeGlacier.png\";\n\nclass Glacier extends Component {\n  state = {\n    GlacierEmission: []\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/glaciersize.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ GlacierEmission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"box col-sm\">\n            <div>\n              <h4>Glaciärer</h4>\n              <p>\n                En glaciär är en stor massa av is och snö, som innehåller\n                jordens största resurs av sötvatten. Cirka tio procent av\n                jordens yta är täckt av glaciärer, och dessa finns i alla\n                världsdelar förutom i Australien.\n                <br></br>\n                <br></br>\n                Hela 97% av glaciärerna finns på Antarktis och Grönland. På\n                grund av ökad global temperatur börjar glaciärerna att smälta.\n                <br></br>\n                <br></br>\n                Om alla glaciärer på Grönland och Antarktis skulle smälta stiger\n                havsnivån med ungefär 80 meter. Det skulle innebära att många\n                städer, exempelvis New York och Tokyo, skulle hamna under\n                vatten.\n              </p>\n              <img src={glacierimage} class=\"glacierimage\" alt=\"glacier\"></img>\n            </div>\n          </div>\n\n          <div className=\"box col-sm\">\n            <h4>Ordlista</h4>\n            <b>Glaciär:</b>\n            <p>En stor massa av is och snö.</p>\n            <b>Glaciärens massbalans:</b>\n            <p>Balansen mellan ismassor som växer och ismassor som smälter.</p>\n            <b>Olika typer av glaciärer:</b>\n            <p>\n              Det finns olika typer av glaciärer, så som toppglaciär, isfält,\n              nischglaciär eller inlandsis.{\" \"}\n            </p>\n\n            <p></p>\n          </div>\n\n          <div className=\"boxsigge col-sm\">\n            <img src={siggefossil} class=\"siggefossil\" alt=\"sigge info.\"></img>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"box-graph col-sm\">\n            <div className=\"App\">\n              <h1>Statistik över glaciärernas storlek </h1>\n              <p className=\"descriptionCo2\">m</p>\n              <MyBarChartGlacier\n                GlacierEmission={this.state.GlacierEmission}\n              ></MyBarChartGlacier>\n              <p className=\"descriptionYear\">År</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Glacier;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nclass MyBarChartSeaLevel extends Component {\n  render() {\n    let seaLevelData = this.props.SeaLevelEmission;\n    if (seaLevelData === undefined) return <p>There is no data </p>;\n\n    return (\n      <React.Fragment>\n        <LineChart\n          width={1000}\n          height={500}\n          data={seaLevelData}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <XAxis dataKey=\"Time\" />\n          <YAxis />\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <Tooltip />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            name=\"Global medelhavsnivå (m)\"\n            dataKey=\"GMSL\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n        </LineChart>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyBarChartSeaLevel;\n","import React, { Component } from \"react\";\nimport MyBarChartSeaLevel from \"./MyBarChartSeaLevel\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport siggefossil from \"./statistic-images/SiggeHavsnivaer.png\";\nimport seaimage from \"./statistic-images/seaimage.png\";\n\nclass SeaLevel extends Component {\n  state = {\n    SeaLevelEmission: [],\n    indexYear: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/sealevel.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ SeaLevelEmission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"box col-sm\">\n            <div>\n              <h4>Havsnivåer</h4>\n              <p>\n                Konsekvensen av att medeltemperaturen ökar, är att glaciärerna\n                smälter. Om alla glaciärer på Grönland och Antarktis skulle\n                smälta stiger havsnivån ungefär 80 meter. Det innebär att många\n                städer skulle hamna under vatten.\n                <br></br>\n                <br></br>\n                Statistik på den globala medelhavsnivån uppdateras varannan\n                månad, och hämtas från NASA/NCES.{\" \"}\n              </p>\n              <img src={seaimage} class=\"seaimage\" alt=\"flooded house\"></img>\n            </div>\n          </div>\n\n          <div className=\"box col-sm\">\n            <h4>Ordlista</h4>\n            <b>Global uppvärmning:</b>\n            <p>En ökning av jordens medeltemperatur. </p>\n            <b>Glaciär:</b>\n            <p>En stor massa av is och snö.</p>\n            <b>NASA:</b>\n            <p>USA:S myndighet för luft- och rymdfart.</p>\n            <b>NCES:</b>\n            <p>\n              NCES står för National Center for Education Statistic. De samlar\n              in och analyserar statistik.{\" \"}\n            </p>\n          </div>\n          <div className=\"boxsigge col-sm\">\n            <img src={siggefossil} class=\"siggefossil\" alt=\"sigge info.\"></img>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"box-graph col-sm\">\n            <div className=\"App\">\n              <h1>Statistik över havsnivåerna</h1>\n              <p className=\"descriptionCo2\">m</p>\n\n              <MyBarChartSeaLevel\n                SeaLevelEmission={this.state.SeaLevelEmission}\n              ></MyBarChartSeaLevel>\n              <p className=\"descriptionYear\">År</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SeaLevel;\n","import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport FossilFuel from \"../pages/statistic/FossilFuels\";\nimport GlobalTemp from \"../pages/statistic/GlobalTemp\";\nimport Glacier from \"../pages/statistic/Glacier\";\nimport SeaLevel from \"../pages/statistic/SeaLevel\";\nimport { Link } from \"react-router-dom\";\n\nclass Klimatforandringar extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div class=\"climateButton\">\n          <Link to=\"/statistic/FossilFuels\">\n            <button class=\"fossilButton\">Fossila Bränslen</button>\n          </Link>\n          <Link to=\"/statistic/Glacier\">\n            <button class=\"glacierButton\">Glaciärer</button>\n          </Link>\n          <Link to=\"/statistic/GlobalTemp\">\n            <button class=\"tempButton\">Globala Temperaturer</button>\n          </Link>\n          <Link to=\"/statistic/SeaLevel\">\n            <button class=\"seaButton\">Havsnivåer</button>\n          </Link>\n        </div>\n        <Switch>\n          <Route path=\"/statistic/FossilFuels\" component={FossilFuel} />\n          <Route path=\"/statistic/Glacier\" component={Glacier} />\n          <Route path=\"/statistic/GlobalTemp\" component={GlobalTemp} />\n          <Route path=\"/statistic/SeaLevel\" component={SeaLevel} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Klimatforandringar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport Footer from \"./components/layouts/Footer\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Start from \"./components/layouts/Start\";\nimport Klimatforandringar from \"./components/layouts/Klimatforandringar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Switch>\n          <Redirect from=\"/climate-website\" exact to=\"/start\"></Redirect>\n          <Route path=\"/start\" component={Start} />\n          <Route path=\"/statistic\" component={Klimatforandringar} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}