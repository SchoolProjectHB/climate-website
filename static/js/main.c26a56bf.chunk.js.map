{"version":3,"sources":["logo.png","components/images/homepage8.gif","components/pages/statistic/fossilimage.png","components/pages/statistic/SiggeFossilaBranslen.png","components/pages/statistic/tempimage.png","components/pages/statistic/SiggeGlobalTemperatur.png","components/pages/statistic/glacierimage.png","components/pages/statistic/SiggeGlacier.png","components/pages/statistic/SiggeHavsnivaer.png","components/pages/statistic/seaimage.png","components/layouts/Navbar.js","components/layouts/Footer.js","components/pages/Start.js","components/pages/statistic/FossilStats.jsx","components/pages/statistic/FossilFuels.jsx","components/pages/statistic/GlobalStats.jsx","components/pages/statistic/GlobalTemp.jsx","components/pages/statistic/GlacierStats.jsx","components/pages/statistic/Glacier.jsx","components/pages/statistic/SeaLevelStats.jsx","components/pages/statistic/SeaLevel.jsx","components/pages/Klimatforandringar.js","components/pages/Ordlista.js","components/pages/Omoss.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo","class","alt","id","Footer","Date","getFullYear","Start","startsida","width","Component","MyBarChart","co2","this","props","CO2Emission","undefined","Fragment","height","data","margin","top","right","left","bottom","dataKey","name","strokeDasharray","type","stroke","activeDot","r","App","state","indexYear","fetch","response","json","setState","fossilimage","siggefossil","onYearFilter","handleYearFilter","MyBarChartGlobal","global","globalEmission","sort","a","b","Year","tempimage","siggetemp","MyBarChartGlacier","dataChartGlacier","glacierimage","MyBarChartSeaLevel","seaimage","Klimatforandringar","path","component","FossilFuel","Glacier","GlobalTemp","SeaLevel","Ordlista","activeIndex","handleClick","e","titleProps","index","newIndex","Accordion","styled","Title","active","onClick","Icon","Content","Omoss","from","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c26a56bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43dd4d7d.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage8.45b90801.gif\";","module.exports = __webpack_public_path__ + \"static/media/fossilimage.ca8d0efc.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeFossilaBranslen.3cb3e5a0.png\";","module.exports = __webpack_public_path__ + \"static/media/tempimage.75cdefc6.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeGlobalTemperatur.0c3b018a.png\";","module.exports = __webpack_public_path__ + \"static/media/glacierimage.f98d788a.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeGlacier.b68e6458.png\";","module.exports = __webpack_public_path__ + \"static/media/SiggeHavsnivaer.22536f91.png\";","module.exports = __webpack_public_path__ + \"static/media/seaimage.207270c2.png\";","import React from 'react';\nimport logo from '../../logo.png';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n    return (\n<nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n  <Link className=\"navbar-brand ml-5\" to=\"/\">\n  <img src={logo} class=\"logo\" alt=\"logo\"/>\n \n  <span className=\"sr-only\">(current)</span></Link>\n   <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      {/* <li className=\"nav-item\">\n        <Link className=\"nav-link text-black text-uppercase ml-5\" to=\"/klimatforandringar\">Klimatförändringar</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link text-black text-uppercase ml-5\" to=\"/ordlista\">Ordlista</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link text-black text-uppercase ml-5\" to=\"/omoss\">Om oss</Link>\n      </li> \n    </ul>*/}\n \n</ul>\n </div>\n</nav>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n//import './App.css';\n// import styled from 'styled-components';\n\nfunction Footer() {\n  return (\n    <div className=\"main-footer\">\n      <div className=\"footer-middle\">\n        <div className=\"container\">\n          <div className=\"row\">\n            {/* Column 1 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3>Smartare utbildning</h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>\n                  Smartare Utbildning är ett företag med klimat i fokus. Vår\n                  mission är att bidra till ökad kunskap om miljön och\n                  miljöförändringar. Detta tror vi kan leda till en grönare, och\n                  mer hållbar framtid.\n                </li>\n              </ul>\n            </div>\n            {/* Column 2 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3>Om applikationen</h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>\n                  Applikationen är till för dig som går på Guldhedsskolan, i\n                  årskurs 6-9. Den är ett verktyg för att du ska lära dig mer om\n                  klimatförändringar, genom att ta del av information och\n                  jämföra klimatdata.\n                </li>\n              </ul>\n            </div>\n            {/* Column 3 */}\n            <div className=\"col-md-4 col-sm-6 text-white\">\n              <h3> Kontakta oss </h3>\n              <ul className=\"list-unstyled text-white\">\n                <li>Smartare Utbildning</li>\n                <li>Göteborg</li>\n                <li>+46700000000</li>\n                <li>kontakt@smartareutbildning.se</li>\n              </ul>\n            </div>\n          </div>\n          {/* Footer bottom */}\n          <div className=\"footer-bottom\">\n            <p className=\"text-xs-center text-white\">\n              &copy;{new Date().getFullYear()} Smartare utbildning - All Right\n              Reserved\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n\n// const FooterContainer = styled.footer``;\n","import React, { Component } from \"react\";\n// import { Button } from \"semantic-ui-react\";\nimport startsida from \"../images/homepage8.gif\";\n//import sigge from \"../images/sigge.png\";\nimport { Link } from \"react-router-dom\";\n\n\nclass Start extends Component {\n    render() {\n      return (\n\n       <div class=\"containerStart\">\n        <img src={startsida} width=\"100%\"/>\n        {/* <a href=\"./statistic/FossilFules\"><button className=\"test-knapp\">Klicka här för att komma igång!</button></a> */}\n        <Link to=\"/statistic/FossilFuels\"><button className=\"test-knapp\">Klicka här för att komma igång!</button></Link>\n\n        </div>\n       \n\n      );\n    }\n}\n\n    export default Start;","import React, { Component } from 'react';\n//import YearFilter from \"./FilterYear\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass MyBarChart extends Component {\n//handleYearFilter=(yearFrom,yearTo)=>{\n  //this.props.onYearFilter(yearFrom, yearTo);\n\n//};\n    render() { \nlet co2 = this.props.CO2Emission; \nif(co2 === undefined) return <p>There is no data...! </p>;\n\n//const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n        return (  \n          <React.Fragment>\n            \n<LineChart width={1000} \nheight={500} data={co2}\nmargin={{top: 5, \nright: 30, \nleft: 20, \nbottom: 5}}>\n       <XAxis dataKey=\"Year\"/>\n       <YAxis name=\"co2\"/>\n       <CartesianGrid strokeDasharray=\"3 3\"/>\n       <Tooltip/>\n       <Legend />\n       <Line type=\"monotone\" dataKey=\"Gas Fuel\" name=\"Gasbränslen\" stroke=\"#3f6962\" activeDot={{r: 4}}/>\n       <Line type=\"monotone\" dataKey=\"Liquid Fuel\" name=\"Flytande bränslen\" stroke=\"#849c4e\" activeDot={{r: 4}}/>\n       <Line type=\"monotone\" dataKey=\"Solid Fuel\" name=\"Fasta bränslen\" stroke=\"#e1903c\" activeDot={{r: 4}}/>\n       <Line type=\"monotone\" dataKey=\"Cement\" name=\"Cement\" stroke=\"#f7de34\" activeDot={{r: 4}}/>\n       \n       \n      </LineChart>\n      \n      </React.Fragment>\n  \n        );\n    }\n}\n\nexport default MyBarChart;","import React, { Component } from \"react\";\nimport MyBarChart from \"./FossilStats\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport fossilimage from \"./fossilimage.png\";\nimport siggefossil from \"./SiggeFossilaBranslen.png\";\n\n// import Ordlista from '../components/pages/Ordlista';\n\nclass App extends Component {\n  state = {\n    CO2Emission: [],\n    indexYear: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ CO2Emission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div>\n                <h4>Fossila utsläpp</h4>\n                <p>\n                  Bensin, diesel, olja, naturgas och kol är exempel på fossila\n                  bränslen. Dessa används till fordon, kol och oljekraftverk.\n                  När fossila bränslen används släpper de ut gaser som skadar\n                  luften.\n                  <br></br>\n                  <br></br>\n                  Några fossila bränslen är svaveldioxid, kväveoxider och\n                  koldioxid (CO2). Alla dessa bränslen bidrar till den globala\n                  uppvärmningen.\n                </p>\n\n                <img\n                  src={fossilimage}\n                  class=\"fossilimage\"\n                  alt=\"clothes hanging to dry\"\n                ></img>\n              </div>\n            </div>\n\n            <div className=\"box col-sm\">\n              <h4>Vad är fossila bränslen?</h4>\n              <b>Gasbränsle:</b>\n              <p>\n                Gasbränslen är bränslen som är i gasform. Exempel på gasbränslen\n                är biogas, naturgas, gasol och vätgas.\n              </p>\n              <b>Flytande bränsle:</b>\n              <p>\n                {\" \"}\n                Flytande bränsle är en vätska som innehåller mycket energi.\n                Exempel på flytande bränslen är bensin, diesel och etanol.\n              </p>\n              <b>Fasta bränslen:</b>\n              <p>\n                {\" \"}\n                Fasta bränslen är olika former av fast material som kan brännas.\n                Detta kan till exempel vara trä, kol eller träpellets.\n              </p>\n              <b>Cement:</b>{\" \"}\n              <p>\n                {\" \"}\n                Cement används bland annat för att bygga byggnader.\n                Cementindustrin bidrar till stora utsläpp av koldioxid (CO2).\n              </p>\n            </div>\n\n            <div className=\"boxsigge col-sm\">\n              <img\n                src={siggefossil}\n                class=\"siggefossil\"\n                alt=\"sigge info.\"\n              ></img>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div className=\"App\">\n                <h1>Statistik över fossila utsläpp</h1>\n\n                <p className=\"descriptionCo2\">co2</p>\n\n                <MyBarChart\n                  CO2Emission={this.state.CO2Emission}\n                  onYearFilter={this.handleYearFilter}\n                ></MyBarChart>\n\n                <p className=\"descriptionYear\">År</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass MyBarChartGlobal extends Component {\n//handleYearFilter=(yearFrom,yearTo)=>{\n  //this.props.onYearFilter(yearFrom, yearTo);\n\n//};\n    render() { \nlet global = this.props.globalEmission; \nif(global === undefined) return <p>There is no data </p>;\n\n//const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n        return (  \n          <React.Fragment>\n\n            \n<LineChart width={1000} height={600} data={global}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n       <XAxis dataKey=\"Year\"/>\n       <YAxis/>\n       <CartesianGrid strokeDasharray=\"3 3\"/>\n       <Tooltip/>\n       <Legend />\n       <Line type=\"monotone\" dataKey=\"Mean\" name=\"Gensomsnittlig temperatur (C°)\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n       \n       \n      </LineChart>\n      \n      </React.Fragment>\n  \n        );\n    }\n}\n\nexport default MyBarChartGlobal;","import React, { Component } from \"react\";\nimport MyBarChartGlobal from \"./GlobalStats\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport tempimage from \"./tempimage.png\";\nimport siggetemp from \"./SiggeGlobalTemperatur.png\";\n\n\n\n//import './cardA.css';\n\nclass App extends Component {\n  state = {\n    globalEmission: [],\n    //searchedYear:[],\n    indexYear: 250\n    //yearFrom: 0,\n    //yearTo: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/temp.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      globalEmission: data.sort((a, b) =>\n        a.Year > b.Year ? 1 : b.Year > a.Year ? -1 : 0\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div>\n                <h4>Globala temperaturer</h4>\n                <p>\n                Global uppvärmning är en ökning av jordens medeltemperatur, som orsakas av \n                den ökade utsläppen av växthusgaser. De senaste hundra åren har temperaturen\n                 på jorden ökat snabbare än någonsin.\n                 \n                 <br></br> \n                 <br></br> \n                 \n                 Konsekvenserna av att den globala temperauren ökar är allvarliga. Bland annat\n                 är en risk att vissa städer kan hamna under vatten, eller att vissa djurarter (så som isbjörnarna)\n                 utrotas. {\" \"}\n                </p>\n            <img src={tempimage} class=\"tempimage\" alt=\"clothes hanging to dry\"></img>\n\n              </div>\n            </div>\n\n            <div className=\"box col-sm\">\n              <h4>Ordlista</h4>\n              <b>Växthusgas:</b><p>En gas i atmosfären som fångar in värme. Exempel på växthusgaser är koldioxid och metan.</p>\n            <b>Medeltemperatur:</b><p>Medeltemperatur är den genomsnittliga temperaturen.</p>\n            </div>\n            <div className=\"boxsigge col-sm\">\n            <img src={siggetemp} class=\"siggefossil\" alt=\"sigge info.\"></img>\n              \n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div className=\"App\">\n                <h1>Statistik över den globala temperaturen</h1>\n        <p className=\"descriptionCo2\">C°</p>\n\n                <MyBarChartGlobal\n                  globalEmission={this.state.globalEmission}\n                  onYearFilter={this.handleYearFilter}\n                ></MyBarChartGlobal>\n                      <p className=\"descriptionYear\">År</p>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass MyBarChartGlacier extends Component {\n//handleYearFilter=(yearFrom,yearTo)=>{\n  //this.props.onYearFilter(yearFrom, yearTo);\n\n//};\n    render() { \nlet dataChartGlacier = this.props.CO2Emission; \nif(dataChartGlacier === undefined) return <p>There is no data </p>;\n\n\n//const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n        return (  \n          <React.Fragment>\n\n            \n<LineChart width={1000} height={600} data={dataChartGlacier}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n       <XAxis dataKey=\"Year\"/>\n       <YAxis/>\n       <CartesianGrid strokeDasharray=\"3 3\"/>\n       <Tooltip/>\n       <Legend />\n       <Line type=\"monotone\" dataKey=\"Mean cumulative mass balance\" name=\"Glaciärens Massbalans\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n       \n       \n      </LineChart>\n      \n      </React.Fragment>\n  \n        );\n    }\n}\n\nexport default MyBarChartGlacier;","import React, { Component } from \"react\";\nimport MyBarChartGlacier from \"./GlacierStats\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport glacierimage from \"./glacierimage.png\";\nimport siggefossil from \"./SiggeGlacier.png\";\n\n\n\n//import './cardA.css';\n\nclass App extends Component {\n  state = {\n    CO2Emission: []\n    //searchedYear:[],\n    //indexYear: 0,\n    //yearFrom: 0,\n    //yearTo: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/glaciersize.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ CO2Emission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div>\n                <h4>Glaciärer</h4>\n                <p>\n                  En glaciär är en stor massa av is och snö, som innehåller jordens största \n                  resurs av sötvatten. Cirka tio procent av jordens yta är täckt av glaciärer, \n                  och dessa finns i alla världsdelar förutom från Australien.\n                  \n                  <br></br>\n                  <br></br>\n                  Hela 97% av glaciärerna finns på Antarktis och Grönland. På grund av ökad global \n                  temperatur börjar glaciärerna att smälta. Det finns totalt sex olika glaciärer.\n                  <br></br>\n                  <br></br>\n                  \n                  Om alla glaciärer på Grönland och Antarktis skulle smälta stiger havsnivån ungefär 80 meter.\n                  Det skulle innebära att städer som New York och Tokyo skulle hamna under vatten.\n                </p>\n            <img src={glacierimage} class=\"glacierimage\" alt=\"clothes hanging to dry\"></img>\n\n              </div>\n            </div>\n\n            <div className=\"box col-sm\">\n              <h4>Ordlista</h4>\n              <b>Glaciär:</b><p>En stor massa av is och snö.</p>\n              <b>Glaciärens massbalans:</b><p>Balansen mellan ismassor som växer och ismassor som smälter.</p> \n            <b>Olika typer av glaciärer:</b><p>Det finns olika typer av glaciärer, så som toppglaciär, isfält, \n              nischglaciär eller inlandsis. </p>\n\n            <p></p>\n            </div>\n\n              <div className=\"boxsigge col-sm\">\n            <img src={siggefossil} class=\"siggefossil\" alt=\"sigge info.\"></img>\n              \n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div className=\"App\">\n                <h1>Statistik över glaciärernas storlek </h1>\n        <p className=\"descriptionCo2\">m</p>\n                <MyBarChartGlacier\n                  CO2Emission={this.state.CO2Emission}\n                ></MyBarChartGlacier>\n                      <p className=\"descriptionYear\">År</p>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n//import YearFilter from \"./FilterYear\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nclass MyBarChartSeaLevel extends Component {\n//handleYearFilter=(yearFrom,yearTo)=>{\n  //this.props.onYearFilter(yearFrom, yearTo);\n\n//};\n    render() { \nlet co2 = this.props.CO2Emission; \nif(co2 === undefined) return <p>There is no data </p>;\n\n//const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n        return (  \n          <React.Fragment>\n\n            \n<LineChart width={1000} height={500} data={co2}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n       <XAxis dataKey=\"Time\"/>\n       <YAxis/>\n       <CartesianGrid strokeDasharray=\"3 3\"/>\n       <Tooltip/>\n       <Legend />\n       <Line type=\"monotone\" name=\"Global medelhavsnivå (m)\" dataKey=\"GMSL\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\n       \n       \n      </LineChart>\n      \n      </React.Fragment>\n  \n        );\n    }\n}\n\nexport default MyBarChartSeaLevel;","import React, { Component } from \"react\";\nimport MyBarChartSeaLevel from \"./SeaLevelStats\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport siggefossil from \"./SiggeHavsnivaer.png\";\nimport seaimage from \"./seaimage.png\";\n\n//import './cardA.css';\n\nclass App extends Component {\n  state = {\n    CO2Emission: [],\n    //searchedYear:[],\n    indexYear: 0\n    //yearFrom: 0,\n    //yearTo: 0\n  };\n\n  async componentDidMount() {\n    const url = \"https://my.api.mockaroo.com/sealevel.json?key=8eb9e6f0\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ CO2Emission: data });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div>\n                <h4>Havsnivåer</h4>\n                <p>\n                  Konsekvensen av att medeltemperaturen ökar, är att glaciärerna\n                  smälter. Om alla glaciärer på Grönland och Antarktis skulle\n                  smälta stiger havsnivån ungefär 80 meter. Det innebär att\n                  många städer, som New York eller Tokyo, skulle hamna under\n                  vatten.\n                  <br></br>\n                  <br></br>\n                  Statistik på den globala medelhavsnivån uppdateras varannan\n                  månad, och hämtas från NASA/NCES.{\" \"}\n                </p>\n                <img\n                  src={seaimage}\n                  class=\"seaimage\"\n                  alt=\"clothes hanging to dry\"\n                ></img>\n              </div>\n            </div>\n\n            <div className=\"box col-sm\">\n              <h4>Ordlista</h4>\n              <b>Global Uppvärmning:</b>\n              <p>En ökning av jordens medeltemperatur. </p>\n              <b>Glaciär:</b>\n              <p>En stor massa av is och snö.</p>\n              <b>NASA:</b>\n              <p>USA:S myndighet för luft- och rymdfart.</p>\n              <b>NCES:</b>\n              <p>\n                NCES står för National Center for Education Statistic. De\n                samlar in och analyserar statistik.{\" \"}\n              </p>\n            </div>\n            <div className=\"boxsigge col-sm\">\n              <img\n                src={siggefossil}\n                class=\"siggefossil\"\n                alt=\"sigge info.\"\n              ></img>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"box col-sm\">\n              <div className=\"App\">\n                <h1>Statistik över havsnivåerna</h1>\n                <p className=\"descriptionCo2\">m</p>\n\n                <MyBarChartSeaLevel\n                  CO2Emission={this.state.CO2Emission}\n                ></MyBarChartSeaLevel>\n                <p className=\"descriptionYear\">År</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Switch, Route } from 'react-router-dom'; \nimport FossilFuel from './statistic/FossilFuels';\nimport GlobalTemp from './statistic/GlobalTemp';\nimport Glacier from './statistic/Glacier';\nimport SeaLevel from './statistic/SeaLevel';\nimport { Link } from \"react-router-dom\";\n\n\n//import ReactDOM from \"react-dom\";\n//import AngryJoe from '../layouts/AngryJoe'\n//import * as statistic from './statistic';\n\nclass Klimatforandringar extends Component { \n  render() {\n    return (\n      <div>\n      <div class=\"climateButton\">  \n        <Link to=\"/statistic/FossilFuels\"><button class=\"fossilButton\">Fossila Bränslen</button></Link>\n        <Link to=\"/statistic/Glacier\"><button class=\"glacierButton\">Glaciärer</button></Link>\n        <Link to=\"/statistic/GlobalTemp\"><button class=\"tempButton\">Globala Temperaturer</button></Link>\n        <Link to=\"/statistic/SeaLevel\"><button class=\"seaButton\">Havsnivåer</button></Link>\n        </div>\n      <Switch>\n           <Route path=\"/statistic/FossilFuels\" component={FossilFuel}/>\n           <Route path=\"/statistic/Glacier\" component={Glacier}/>\n           <Route path=\"/statistic/GlobalTemp\" component={GlobalTemp}/>\n           <Route path=\"/statistic/SeaLevel\" component={SeaLevel}/>\n          \n        </Switch>\n        </div>\n      \n    );\n  }\n}\n\n//class Klimatforandringar extends Component {\n  //  state = {\n    //  selectedCardType: ''\n    //};\n  \n  \n    //render(){\n      //return (\n        //<Fragment>\n       \n      //  <section className=\"app-section container\">\n        //  {this.renderCardSelector()}\n\n          //<div className=\"top-margin-small\">\n            //{this.renderSelectedCard(this.state.selectedCardType)}\n          //</div>\n        //</section>\n      //</Fragment>\n    //);\n  //}\n  \n    //renderCardSelector() {\n      //return (\n        \n          //<select className=\"ui dropdown\"onChange={(e) => this.setState({ selectedCardType: e.target.value })}>\n         //<input type=\"active\" name=\"Kategori\">\n          // </input>\n           //<option value=\"0\">Välj en kategori</option>\n            //<option value=\"CardA\">Fossila Bränslen</option>\n            //<option value=\"CardB\">Globala Temperaturer</option>\n            //<option value=\"CardC\">Glaciärer</option>\n            //<option value=\"CardD\">Havsnivåer</option>\n          //</select>\n      //);\n    //}\n\n    //renderSelectedCard(selectedCardType) {\n      //  if (!selectedCardType)\n        //  return <AngryJoe text=\"Välj en kategorii\" />;\n    //if(selectedCardType===\"0\")\n    //return; \n      //  const Card = statistic[selectedCardType];\n    \n   //     return <Card />;\n     // }\n\n//}\n  \n \n//const rootElement = document.getElementById(\"root\");\n//ReactDOM.render(<Klimatforandringar />, rootElement);\n\nexport default Klimatforandringar;","import React, { Component } from \"react\";\nimport { Accordion, Icon } from \"semantic-ui-react\";\n\n\nclass Ordlista extends Component {\n  state = { activeIndex: 0 };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n\n    return (\n      <div className=\"table-word\">\n      <Accordion styled>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Miljöförändringar\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <p>\n            Klimatet har alltid förändrats, men på grund av människans livsstil\n            ökar den globala temperaturen snabbare än tidigare. Detta då\n            människan bland annat kör bil, flyger och äter mat som är dålig för\n            klimatet, som kött och varor som transporterats långt.\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          CO2-utsläpp och fossila bränslen\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n          <p>\n            Fossila bränslen är exempelvis bensin, diesel, olja, naturgas och\n            kol. När fossila bränslen används till bland annat fordon eller\n            industrin bildas CO2 (koldioxid). Detta är dåligt för jordens\n            atmosfär, då växthuseffekten ökar.\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 2}\n          index={2}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Globala temperaturer\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 2}>\n          <p>\n            Den globala genomsnittstemperaturen, det vill säga\n            medeltemperaturen, har stigit. Det finns allvarliga konsekvenser av\n            den globala uppvärmningen, då bland annat glaciärer smälter och\n            havsnivån ökar.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 3}\n          index={3}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Glaciärer\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 3}>\n          <p>\n            En glaciär är en stor massa av is och snö, och innehåller jordens\n            största resurs av sötvatten. Cirka tio procent av jordens yta är\n            täckt av glaciärer, och dessa finns i alla världsdelar bortsett från\n            Australien. Hela 97% av glaciärerna finns på Antarktis och Grönland.\n            På grund av ökad global temperatur börjar glaciärerna att smälta.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 4}\n          index={4}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Havsnivåer\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 4}>\n          <p>\n            Den globala havsnivån stiger, vilket beror på att temperaturen i\n            luften stiger, som en konsekvens av att glaciärerna smälter. Även om\n            växthusgasutsläppen skulle minska drastiskt, kommer havsnivån att\n            fortsätta stiga. Detta då halten koldioxid i atmosfären redan är så\n            hög.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 5}\n          index={5}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Gasbränslen\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 5}>\n          <p>\n            Gasbränslen är ett samlingsnamn för bränslen som vid användningen är\n            i gasform. Till dessa hör till exempel biogas, naturgas, gasol och\n            vätgas.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 6}\n          index={6}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Flytande bränslen\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 6}>\n          <p>\n            De flesta flytande bränslen i ingår i kategorin fossila bränslen.\n            Exempel på flytande bränslen är, bensin, etanol och biodiesel.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 7}\n          index={7}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Fasta bränslen\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 7}>\n          <p>\n            Fast bränsle är olika former av fast material som kan brännas för\n            att frigöra energi, vilket ger värme och ljus genom\n            förbränningsprocessen. Vanliga exempel på fasta bränslen är trä, kol\n            och träpellets.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 8}\n          index={8}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Cement\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 8}>\n          <p>\n            Cementindustrin är en av de två största producenterna av koldioxid\n            (CO 2 ) och skapar upp till 8% av de globala konstgjorda utsläppen\n            av denna gas, varav 50% kommer från den kemiska processen och 40%\n            från brinnande bränsle.\n          </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 9}\n          index={9}\n          onClick={this.handleClick}\n        >\n          <Icon name=\"dropdown\" />\n          Gasfackling\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 9}>\n          <p>\n            Gasfackling är en industriprocess som innebär att bränna\n            överskottsgas på oljefält, i raffinaderier eller vid fabriker.\n            Bränningen sker oftast enbart för att elda upp gasen. Värmeenergin\n            tas inte tillvara.\n          </p>\n        </Accordion.Content>\n      </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default Ordlista;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Omoss extends Component {\n    render() {\n      return (\n\n        \n      <div className=\"container\">\n      <h1> Om oss </h1>\n        <div className=\"row\">\n          <div className=\"omOss-sida col-sm\">\n            <div>\n                <h4>Smartare utbildning</h4>\n                <p>\n                  Smartare Utbildning är ett företag med klimat i fokus. Vår\n                  mission är att bidra till ökad kunskap om miljön och\n                  miljöförändringar. Detta tror vi kan leda till en grönare, och\n                  mer hållbar framtid. Våra lokaler finner ni i centrala\n                  Göteborg, där för närvarande 14 personer jobbar. Där arbetar\n                  vi dagligen för att ni som elever ska få de bästa\n                  förutsättningarna att kunna lära er mer om vårt klimat.\n                </p>\n            </div>\n          </div>\n\n          <div className=\"omOss-sida col-sm\">\n            <h4>Kontakt</h4>\n            <div className=\"omOss-list\">\n            <ul>\n              <li>Vi brinner för klimatet och för att få dela med oss av vår\n              kunskap. Tveka inte på att höra av dig till oss på Smartare Utbildning. </li>\n              <li>Smartare Utbildning</li>\n              <li>+46700000000</li>\n              <li>kontakt@smartareutbildning.se</li>\n            </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"omOss-sida col-sm\">\n            <div>\n                <h4>Så jobbar vi</h4>\n                <p>\n                  Smartare Utbildning vill sprida kunskap till elever om de\n                  pågående klimatförändringarna. Vi tycker att lärande ska vara\n                  roligt och intressant, och bidra till en ökad vilja av att\n                  lära sig mer.\n                </p>\n            </div>\n          </div>\n\n          <div className=\"omOss-sida col-sm\"> \n            <h4>Om applikationen</h4>\n            <p>\n              Applikationen är till för dig som går på Guldhedsskolan, i årskurs\n              6-9. Den är ett verktyg för att du ska lära dig mer om\n              klimatförändringar, genom att ta del av information och jämföra\n              klimatdata.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Omoss;\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/layouts/Navbar'; \nimport Footer from './components/layouts/Footer'; \n// React Router Import\nimport { Switch, Route, Redirect } from 'react-router-dom'; \n// Import pages\nimport Start from './components/pages/Start';\nimport Klimatforandringar from './components/pages/Klimatforandringar';\nimport Ordlista from './components/pages/Ordlista';\nimport Omoss from './components/pages/Omoss';\n\n\n\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Navbar />\n        <Switch>\n          <Redirect from= \"/\" exact to = \"/Start\"></Redirect>\n          <Route path=\"/start\" component={Start}/>\n          <Route path=\"/statistic\" component={Klimatforandringar}/>\n          <Route path=\"/ordlista\" component={Ordlista}/>\n          <Route path=\"/omoss\" component={Omoss}/>\n          \n        </Switch>\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n    <Router>\n<App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}